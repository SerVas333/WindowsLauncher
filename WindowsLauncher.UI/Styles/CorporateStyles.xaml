<!-- ===== WindowsLauncher.UI/Styles/CorporateStyles.xaml - КОРПОРАТИВНЫЕ СТИЛИ ===== -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Корпоративная цветовая схема -->
    <SolidColorBrush x:Key="CorporateRed" Color="#C41E3A"/>
    <SolidColorBrush x:Key="CorporateRedDark" Color="#A01729"/>
    <SolidColorBrush x:Key="CorporateRedLight" Color="#E8324F"/>
    <SolidColorBrush x:Key="CorporateGray" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="CorporateGrayDark" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="CorporateGrayLight" Color="#FAFAFA"/>
    <SolidColorBrush x:Key="CorporateText" Color="#333333"/>
    <SolidColorBrush x:Key="CorporateTextLight" Color="#666666"/>
    <SolidColorBrush x:Key="CorporateTextMuted" Color="#999999"/>
    <SolidColorBrush x:Key="CorporateWhite" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="CorporateBorder" Color="#DDDDDD"/>

    <!-- Градиенты -->
    <LinearGradientBrush x:Key="CorporateHeaderGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#C41E3A" Offset="0"/>
        <GradientStop Color="#A01729" Offset="1"/>
    </LinearGradientBrush>

    <!-- Кнопки в корпоративном стиле -->
    <Style x:Key="CorporateButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource CorporateRed}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource CorporateRedLight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource CorporateRedDark}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource CorporateTextMuted}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Вторичные кнопки -->
    <Style x:Key="CorporateButtonSecondary" TargetType="Button" BasedOn="{StaticResource CorporateButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateRed}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource CorporateRed}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CorporateRed}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Кнопки категорий -->
    <Style x:Key="CorporateCategoryButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="20"
                            BorderBrush="{StaticResource CorporateBorder}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource CorporateGrayDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Опасные кнопки (удаление, очистка данных) в корпоративном стиле -->
    <Style x:Key="CorporateButtonDanger" TargetType="Button" BasedOn="{StaticResource CorporateButton}">
        <Setter Property="Background" Value="{StaticResource CorporateRed}"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CorporateRedLight}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource CorporateRedDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Поле поиска в корпоративном стиле -->
    <Style x:Key="CorporateSearchBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateText}"/>
        <Setter Property="Background" Value="{StaticResource CorporateWhite}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CorporateBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="25">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"/>
                            <TextBlock Text="Поиск приложений..." 
                                     Foreground="{StaticResource CorporateTextMuted}"
                                     Margin="{TemplateBinding Padding}"
                                     VerticalAlignment="Center"
                                     IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource CorporateRed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Карточки приложений -->
    <Style x:Key="CorporateAppCard" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CorporateWhite}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource CorporateBorder}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource CorporateRed}"/>
                <Setter Property="Background" Value="{StaticResource CorporateGray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox в корпоративном стиле -->
    <Style x:Key="CorporateComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource CorporateWhite}"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CorporateBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="20"/>
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="1"
                                                Data="M 0 0 L 4 4 L 8 0 Z"
                                                Fill="{StaticResource CorporateTextMuted}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"/>
                        <Popup x:Name="Popup"
                             Placement="Bottom"
                             IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True"
                             Focusable="False"
                             PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                MinWidth="{TemplateBinding ActualWidth}">
                                <Border Background="{StaticResource CorporateWhite}"
                                      BorderBrush="{StaticResource CorporateBorder}"
                                      BorderThickness="1"
                                      CornerRadius="4">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Текстовые стили -->
    <Style x:Key="CorporateTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateWhite}"/>
    </Style>

    <Style x:Key="CorporateSubtitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateTextLight}"/>
    </Style>

    <Style x:Key="CorporateBodyText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateText}"/>
    </Style>

    <!-- Иконки -->
    <Style x:Key="CorporateIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Emoji"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateWhite}"/>
    </Style>

    <!-- ProgressBar в корпоративном стиле -->
    <Style x:Key="CorporateProgressBar" TargetType="ProgressBar">
        <Setter Property="Background" Value="{StaticResource CorporateGray}"/>
        <Setter Property="Foreground" Value="{StaticResource CorporateRed}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource CorporateBorder}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Padding="2">
                        <Grid x:Name="PART_Track">
                            <Border x:Name="PART_Indicator"
                                    Background="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Left"
                                    CornerRadius="1"/>
                            <!-- Анимация для IsIndeterminate -->
                            <Border x:Name="IndeterminateRoot"
                                    Background="{TemplateBinding Foreground}"
                                    Opacity="0.8"
                                    CornerRadius="1"
                                    Visibility="Collapsed">
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="IndeterminateTransform"/>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateTransform"
                                                       Storyboard.TargetProperty="X"
                                                       From="-50" To="200"
                                                       Duration="0:0:2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>