-- ==============================================
-- WindowsLauncher Database Creation Script
-- Для использования в isql.exe (Firebird)
-- ==============================================

-- 1. СОЗДАНИЕ БАЗЫ ДАННЫХ
CREATE DATABASE 'C:\DataBase\LAUNCHER.fdb'
PAGE_SIZE 8192
USER 'SYSDBA'
PASSWORD 'Ghtgjyf1'
DEFAULT CHARACTER SET UTF8
COLLATION UTF8;

-- Подключение к созданной базе
CONNECT 'C:\DataBase\LAUNCHER.fdb'
USER 'SYSDBA'
PASSWORD 'Ghtgjyf1';

-- 2. СОЗДАНИЕ ДОМЕНОВ (типов данных)
CREATE DOMAIN D_ID AS BIGINT NOT NULL;
CREATE DOMAIN D_STRING AS VARCHAR(255);
CREATE DOMAIN D_SHORT_STRING AS VARCHAR(100);
CREATE DOMAIN D_ENTITY_ID AS VARCHAR(50);
CREATE DOMAIN D_TEXT AS BLOB SUB_TYPE TEXT;
CREATE DOMAIN D_BOOL AS BOOLEAN DEFAULT FALSE;
CREATE DOMAIN D_DATETIME AS TIMESTAMP;
CREATE DOMAIN D_EMAIL AS VARCHAR(320);
CREATE DOMAIN D_PATH AS VARCHAR(1000);

-- 3. СОЗДАНИЕ ТАБЛИЦ

-- Таблица пользователей
CREATE TABLE USERS (
    ID D_ID,
    USERNAME D_STRING NOT NULL,
    DISPLAY_NAME D_STRING,
    EMAIL D_EMAIL,
    ROLE SMALLINT DEFAULT 1 CHECK (ROLE BETWEEN 0 AND 3),
    IS_ACTIVE D_BOOL DEFAULT TRUE,
    IS_SERVICE_ACCOUNT D_BOOL DEFAULT FALSE,
    PASSWORD_HASH D_STRING,
    SALT D_STRING,
    CREATED_AT D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    LAST_LOGIN_AT D_DATETIME,
    LAST_ACTIVITY_AT D_DATETIME,
    FAILED_LOGIN_ATTEMPTS INTEGER DEFAULT 0,
    IS_LOCKED D_BOOL DEFAULT FALSE,
    LOCKOUT_END D_DATETIME,
    LAST_PASSWORD_CHANGE D_DATETIME,
    GROUPS_JSON D_TEXT DEFAULT '[]',
    SETTINGS_JSON D_TEXT DEFAULT '{}',
    METADATA_JSON D_TEXT DEFAULT '{}',
    -- Гибридная авторизация
    AUTHENTICATION_TYPE SMALLINT DEFAULT 0,
    DOMAIN_USERNAME D_STRING,
    LAST_DOMAIN_SYNC D_DATETIME,
    IS_LOCAL_USER D_BOOL DEFAULT TRUE,
    ALLOW_LOCAL_LOGIN D_BOOL DEFAULT FALSE,
    
    CONSTRAINT PK_USERS PRIMARY KEY (ID),
    CONSTRAINT UQ_USERS_USERNAME UNIQUE (USERNAME)
);

-- Таблица приложений
CREATE TABLE APPLICATIONS (
    ID D_ID,
    NAME D_STRING NOT NULL,
    DESCRIPTION D_TEXT,
    EXECUTABLE_PATH D_PATH NOT NULL,
    ARGUMENTS D_STRING,
    WORKING_DIRECTORY D_PATH,
    ICON_PATH D_PATH,
    CATEGORY D_STRING DEFAULT 'General',
    APP_TYPE SMALLINT DEFAULT 0 CHECK (APP_TYPE BETWEEN 0 AND 2),
    MINIMUM_ROLE SMALLINT DEFAULT 1 CHECK (MINIMUM_ROLE BETWEEN 0 AND 3),
    REQUIRED_GROUPS D_TEXT,
    IS_ENABLED D_BOOL DEFAULT TRUE,
    SORT_ORDER INTEGER DEFAULT 0,
    CREATED_DATE D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_DATE D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY D_STRING DEFAULT 'SYSTEM',
    
    CONSTRAINT PK_APPLICATIONS PRIMARY KEY (ID),
    CONSTRAINT UQ_APPLICATIONS_NAME UNIQUE (NAME)
);

-- Таблица настроек пользователей
CREATE TABLE USER_SETTINGS (
    ID D_ID,
    USER_ID BIGINT NOT NULL,
    THEME D_STRING DEFAULT 'Light',
    ACCENT_COLOR D_STRING DEFAULT 'Blue',
    TILE_SIZE INTEGER DEFAULT 150,
    SHOW_CATEGORIES D_BOOL DEFAULT TRUE,
    DEFAULT_CATEGORY D_STRING DEFAULT 'All',
    HIDDEN_CATEGORIES D_TEXT DEFAULT '[]',
    AUTO_REFRESH D_BOOL DEFAULT TRUE,
    REFRESH_INTERVAL_MINUTES INTEGER DEFAULT 30,
    SHOW_DESCRIPTIONS D_BOOL DEFAULT TRUE,
    UPDATED_AT D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT PK_USER_SETTINGS PRIMARY KEY (ID),
    CONSTRAINT FK_USER_SETTINGS_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
    CONSTRAINT UQ_USER_SETTINGS_USER_ID UNIQUE (USER_ID)
);

-- Таблица аудита (журнал действий)
CREATE TABLE AUDIT_LOGS (
    ID D_ID,
    USER_ID BIGINT,
    USERNAME D_SHORT_STRING,
    ACTION D_SHORT_STRING NOT NULL,
    APPLICATION_NAME D_STRING,
    DETAILS D_TEXT,
    TIMESTAMP_UTC D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    SUCCESS D_BOOL DEFAULT TRUE,
    ERROR_MESSAGE D_TEXT,
    COMPUTER_NAME D_SHORT_STRING,
    IP_ADDRESS VARCHAR(45),
    USER_AGENT D_STRING,
    METADATA_JSON D_TEXT,
    
    CONSTRAINT PK_AUDIT_LOGS PRIMARY KEY (ID),
    CONSTRAINT FK_AUDIT_LOGS_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE SET NULL
);

-- Таблица версий БД
CREATE TABLE DATABASE_VERSION (
    VERSION_NUMBER D_STRING NOT NULL,
    APPLIED_AT D_DATETIME DEFAULT CURRENT_TIMESTAMP,
    DESCRIPTION D_STRING,
    
    CONSTRAINT PK_DATABASE_VERSION PRIMARY KEY (VERSION_NUMBER)
);

-- 4. СОЗДАНИЕ ГЕНЕРАТОРОВ (SEQUENCES)
CREATE GENERATOR GEN_USERS_ID;
CREATE GENERATOR GEN_APPLICATIONS_ID;
CREATE GENERATOR GEN_USER_SETTINGS_ID;
CREATE GENERATOR GEN_AUDIT_LOGS_ID;

-- Установка начальных значений генераторов
SET GENERATOR GEN_USERS_ID TO 1000;
SET GENERATOR GEN_APPLICATIONS_ID TO 1000;
SET GENERATOR GEN_USER_SETTINGS_ID TO 1000;
SET GENERATOR GEN_AUDIT_LOGS_ID TO 1000;

-- 5. СОЗДАНИЕ ТРИГГЕРОВ ДЛЯ AUTO INCREMENT
SET TERM !! ;

CREATE TRIGGER TR_USERS_BI FOR USERS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_USERS_ID, 1);
END!!

CREATE TRIGGER TR_APPLICATIONS_BI FOR APPLICATIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_APPLICATIONS_ID, 1);
END!!

CREATE TRIGGER TR_USER_SETTINGS_BI FOR USER_SETTINGS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_USER_SETTINGS_ID, 1);
END!!

CREATE TRIGGER TR_AUDIT_LOGS_BI FOR AUDIT_LOGS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_AUDIT_LOGS_ID, 1);
END!!

-- Триггер для обновления UPDATED_AT в USER_SETTINGS
CREATE TRIGGER TR_USER_SETTINGS_BU FOR USER_SETTINGS
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
    NEW.UPDATED_AT = CURRENT_TIMESTAMP;
END!!

SET TERM ; !!

-- 6. СОЗДАНИЕ ИНДЕКСОВ
CREATE INDEX IDX_USERS_USERNAME ON USERS (USERNAME);
CREATE INDEX IDX_USERS_EMAIL ON USERS (EMAIL);
CREATE INDEX IDX_USERS_ROLE ON USERS (ROLE);
CREATE INDEX IDX_USERS_ACTIVE ON USERS (IS_ACTIVE);
CREATE INDEX IDX_USERS_SERVICE_ACCOUNT ON USERS (IS_SERVICE_ACCOUNT);
CREATE INDEX IDX_USERS_AUTH_TYPE ON USERS (AUTHENTICATION_TYPE);
CREATE INDEX IDX_USERS_LOCAL_USER ON USERS (IS_LOCAL_USER);
CREATE INDEX IDX_USERS_DOMAIN_USERNAME ON USERS (DOMAIN_USERNAME);
CREATE INDEX IDX_USERS_LAST_DOMAIN_SYNC ON USERS (LAST_DOMAIN_SYNC);

CREATE INDEX IDX_APPLICATIONS_CATEGORY ON APPLICATIONS (CATEGORY);
CREATE INDEX IDX_APPLICATIONS_TYPE ON APPLICATIONS (APP_TYPE);
CREATE INDEX IDX_APPLICATIONS_ENABLED ON APPLICATIONS (IS_ENABLED);
CREATE INDEX IDX_APPLICATIONS_ROLE ON APPLICATIONS (MINIMUM_ROLE);
CREATE INDEX IDX_APPLICATIONS_SORT ON APPLICATIONS (SORT_ORDER);

CREATE INDEX IDX_USER_SETTINGS_USER_ID ON USER_SETTINGS (USER_ID);

CREATE INDEX IDX_AUDIT_USER ON AUDIT_LOGS (USER_ID);
CREATE INDEX IDX_AUDIT_ACTION ON AUDIT_LOGS (ACTION);
CREATE INDEX IDX_AUDIT_TIMESTAMP ON AUDIT_LOGS (TIMESTAMP_UTC);
CREATE INDEX IDX_AUDIT_USERNAME ON AUDIT_LOGS (USERNAME);
CREATE INDEX IDX_AUDIT_SUCCESS ON AUDIT_LOGS (SUCCESS);
CREATE INDEX IDX_AUDIT_USERNAME_TIMESTAMP ON AUDIT_LOGS (USERNAME, TIMESTAMP_UTC);

-- 7. ЗАПОЛНЕНИЕ НАЧАЛЬНЫМИ ДАННЫМИ

-- Версия базы данных
INSERT INTO DATABASE_VERSION (VERSION_NUMBER, DESCRIPTION) 
VALUES ('1.0.0.0', 'Initial database creation');

-- Пользователи по умолчанию
INSERT INTO USERS (USERNAME, DISPLAY_NAME, EMAIL, ROLE, IS_ACTIVE)
VALUES ('guest', 'Guest User', 'guest@local', 0, 1);

INSERT INTO USERS (USERNAME, DISPLAY_NAME, EMAIL, ROLE, IS_ACTIVE)
VALUES ('serviceadmin', 'Service Administrator', 'admin@local', 3, 1);

-- Приложения по умолчанию
INSERT INTO APPLICATIONS (NAME, DESCRIPTION, EXECUTABLE_PATH, CATEGORY, APP_TYPE, MINIMUM_ROLE, IS_ENABLED, SORT_ORDER, CREATED_BY)
VALUES ('Calculator', 'Windows Calculator', 'calc.exe', 'Utilities', 0, 1, 1, 1, 'SYSTEM');

INSERT INTO APPLICATIONS (NAME, DESCRIPTION, EXECUTABLE_PATH, CATEGORY, APP_TYPE, MINIMUM_ROLE, IS_ENABLED, SORT_ORDER, CREATED_BY)
VALUES ('Notepad', 'Text Editor', 'notepad.exe', 'Utilities', 0, 1, 1, 2, 'SYSTEM');

INSERT INTO APPLICATIONS (NAME, DESCRIPTION, EXECUTABLE_PATH, CATEGORY, APP_TYPE, MINIMUM_ROLE, IS_ENABLED, SORT_ORDER, CREATED_BY)
VALUES ('Google', 'Google Search', 'https://www.google.com', 'Web', 2, 1, 1, 3, 'SYSTEM');

INSERT INTO APPLICATIONS (NAME, DESCRIPTION, EXECUTABLE_PATH, CATEGORY, APP_TYPE, MINIMUM_ROLE, REQUIRED_GROUPS, IS_ENABLED, SORT_ORDER, CREATED_BY)
VALUES ('Control Panel', 'Windows Control Panel', 'control.exe', 'System', 0, 2, '["LauncherPowerUsers", "LauncherAdmins"]', 1, 4, 'SYSTEM');

INSERT INTO APPLICATIONS (NAME, DESCRIPTION, EXECUTABLE_PATH, CATEGORY, APP_TYPE, MINIMUM_ROLE, IS_ENABLED, SORT_ORDER, CREATED_BY)
VALUES ('Command Prompt', 'Windows Command Line', 'cmd.exe', 'System', 0, 1, 1, 5, 'SYSTEM');

-- 8. СОЗДАНИЕ ПРЕДСТАВЛЕНИЙ (VIEWS)
CREATE VIEW V_ACTIVE_APPLICATIONS AS
SELECT 
    ID,
    NAME,
    DESCRIPTION,
    EXECUTABLE_PATH,
    ARGUMENTS,
    WORKING_DIRECTORY,
    ICON_PATH,
    CATEGORY,
    APP_TYPE,
    MINIMUM_ROLE,
    REQUIRED_GROUPS,
    SORT_ORDER,
    CREATED_DATE,
    MODIFIED_DATE,
    CREATED_BY,
    MODIFIED_BY
FROM APPLICATIONS 
WHERE IS_ENABLED = 1
ORDER BY SORT_ORDER, NAME;

CREATE VIEW V_ACTIVE_USERS AS
SELECT 
    ID,
    USERNAME,
    DISPLAY_NAME,
    EMAIL,
    ROLE,
    LAST_LOGIN_AT,
    CREATED_AT,
    UPDATED_AT
FROM USERS 
WHERE IS_ACTIVE = 1
ORDER BY USERNAME;

-- 9. СОЗДАНИЕ ПРОЦЕДУР (опционально)
SET TERM !! ;

CREATE PROCEDURE SP_GET_USER_APPLICATIONS(
    USER_ROLE SMALLINT,
    USER_GROUPS VARCHAR(1000) DEFAULT NULL
)
RETURNS (
    APP_ID BIGINT,
    APP_NAME VARCHAR(255),
    APP_DESCRIPTION BLOB SUB_TYPE TEXT,
    EXECUTABLE_PATH VARCHAR(1000),
    CATEGORY VARCHAR(255),
    APP_TYPE SMALLINT
)
AS
BEGIN
    FOR SELECT 
        ID,
        NAME,
        DESCRIPTION,
        EXECUTABLE_PATH,
        CATEGORY,
        APP_TYPE
    FROM V_ACTIVE_APPLICATIONS 
    WHERE MINIMUM_ROLE <= :USER_ROLE
    ORDER BY SORT_ORDER, NAME
    INTO :APP_ID, :APP_NAME, :APP_DESCRIPTION, :EXECUTABLE_PATH, :CATEGORY, :APP_TYPE
    DO
    BEGIN
        SUSPEND;
    END
END!!

SET TERM ; !!

-- 10. УСТАНОВКА ПРАВ ДОСТУПА (опционально)
-- GRANT SELECT, INSERT, UPDATE, DELETE ON USERS TO LAUNCHER_APP;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON APPLICATIONS TO LAUNCHER_APP;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON USER_SETTINGS TO LAUNCHER_APP;
-- GRANT SELECT, INSERT ON AUDIT_LOGS TO LAUNCHER_APP;

-- Завершение создания
COMMIT;

-- Проверка созданных таблиц
SELECT RDB$RELATION_NAME FROM RDB$RELATIONS 
WHERE RDB$SYSTEM_FLAG = 0 
ORDER BY RDB$RELATION_NAME;

-- Проверка данных
SELECT COUNT(*) AS USER_COUNT FROM USERS;
SELECT COUNT(*) AS APPLICATION_COUNT FROM APPLICATIONS;

-- Сообщение о завершении
SELECT 'Database LAUNCHER created successfully!' AS STATUS FROM RDB$DATABASE;